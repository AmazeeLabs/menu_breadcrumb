<?php
// $Id$
/**
 * @file
 * The main file for the menu_breadcrumb module.
 *
 * By default, Drupal 6 will use the Navigation menu for the breadcrumb.
 * This module allows you to use the menu the current page belongs to for
 * the breadcrumb.
 *
 * As an added bonus, it also allows you to append the page title to the
 * breadcrumb (either as a clickable url or not) and hide the breadcrumb
 * if it only contains the link to the front page.
 *
 * Maintained by: Geoffrey de Vlugt <gdevlugt@gmail.com>
 */

/**
 * Implementation of hook_help().
 */
function menu_breadcrumb_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/settings/modules#description':
      $output = t('Allows you to use the menu the current page belongs to for the breadcrumb.');
      break;
    case 'admin/settings/menu_breadcrumb':
      $output = t('<p>By default, Drupal 6 will use the Navigation menu for the breadcrumb. This module allows you to use the menu the current page belongs to for the breadcrumb.</p><p>As an added bonus, it also allows you to append the page title to the breadcrumb (either as a clickable url or not) and hide the breadcrumb if it only contains the link to the front page.</p>');
      break;
  }
  
  return $output;
}

/**
 * Implementation of hook_menu().
 */
function menu_breadcrumb_menu() {
  $items = array();

  $items['admin/settings/menu_breadcrumb'] = array(
    'title' => 'Menu breadcrumb',
    'description' => 'Configure menu breadcrumb.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('menu_breadcrumb_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_init().
 */
function menu_breadcrumb_init() {
  if (variable_get('menu_breadcrumb_determine_menu', 1)) {
    $menu_list = variable_get('menu_breadcrumb_menus', array('admin_menu', 'devel'));
    $filter = variable_get('menu_breadcrumb_menus_filter', 'blacklist');
    $menu_item = menu_get_item();
    $result = db_query("SELECT mlid, menu_name FROM {menu_links} WHERE link_path = '%s'", $menu_item['href']);
    while ($menu_link = db_fetch_array($result)) {
      // @see http://www.php.net/manual/en/function.in-array.php#86695
      $menu_in_list = in_array($menu_link['menu_name'], $menu_list, TRUE);
      if ( ( $filter == 'whitelist' && $menu_in_list ) ||
           ( $filter == 'blacklist' && !$menu_in_list ) ) {
        menu_set_active_menu_name($menu_link['menu_name']);
        break;
      }
    }
  }

  $breadcrumb = drupal_get_breadcrumb();
  
  if (variable_get('menu_breadcrumb_append_node_title', 0) == 1) {
    if (variable_get('menu_breadcrumb_append_node_url', 0) == 1) {
      $breadcrumb[] = l(drupal_get_title(), $_GET['q'], array('html' => TRUE,));
    }
    else {
      $breadcrumb[] = drupal_get_title();
    }
  }
    
  if (count($breadcrumb) == 1 && variable_get('menu_breadcrumb_hide_on_single_item', 0)) {
    $breadcrumb = array();
  }
    
  drupal_set_breadcrumb($breadcrumb);
}

/**
 * Menu breadcrumb admin settings form.
 *
 * @return
 * The settings form used by Menu breadcrumb.
 */
function menu_breadcrumb_admin_settings_form() {
  $form['menu_breadcrumb_determine_menu'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use menu the page belongs to for the breadcrumb.'),
    '#description' => t('By default, Drupal 6 will use the Navigation menu for the breadcrumb. If you want to use the menu the active page belongs to for the breadcrumb, enable this option.'),
    '#default_value' => variable_get('menu_breadcrumb_determine_menu', 1),
  );
    
  $form['menu_breadcrumb_append_node_title'] = array(
    '#type' => 'checkbox',
    '#title' => t('Append page title to breadcrumb'),
    '#description' => t('Choose whether or not the page title should be included in the breadcrumb.'),
    '#default_value' => variable_get('menu_breadcrumb_append_node_title', 0),
  );

  $form['menu_breadcrumb_append_node_url'] = array(
    '#type' => 'checkbox',
    '#title' => t('Appended page title as an URL.'),
    '#description' => t('Choose whether or not the appended page title should be an URL.'),
    '#default_value' => variable_get('menu_breadcrumb_append_node_url', 0),
  );

  $form['menu_breadcrumb_hide_on_single_item'] = array(
    '#type' => 'checkbox',
    '#title' => t('Hide the breadcrumb if the breadcrumb only contains the link to the front page.'),
    '#description' => t('Choose whether or not the breadcrumb should be hidden if the breadcrumb only contains a link to the front page (<em>Home</em>.).'),
    '#default_value' => variable_get('menu_breadcrumb_hide_on_single_item', 0),
  );

  $include_exclude_description = 'Use this to specify which menus are used to generate breadcrumbs. ' ;
  $form['include_exclude'] = array( 
    '#type' => 'fieldset',
    '#title' => t('Include / Exclude Menus'),
    '#description' => t($include_exclude_description),
  ) ;

  $form['include_exclude']['menu_breadcrumb_menus_filter'] = array(
    '#type' => 'radios',
    '#title' => t('Menu filter'),
    '#options' => array(
      'blacklist' => t('Blacklist - Menu items will never be chosen from the menus selected below.'),
      'whitelist' => t('Whitelist - Menu items will only be chosen from the menus selected below.'),
    ),
    '#default_value' => variable_get('menu_breadcrumb_menus_filter', 'blacklist'),
  );

  $form['include_exclude']['menu_breadcrumb_menus'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Menu list'),
    '#description' => t('Select which menus to apply the blacklist / whitelist to.'),
    '#options' => drupal_map_assoc(menu_get_names()),
    '#default_value' => variable_get('menu_breadcrumb_menus', array('admin_menu', 'devel')),
  );

  return system_settings_form($form);
}